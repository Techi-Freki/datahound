name: Unit Tests

on:
  push:
  pull_request:

defaults:
  run:
    shell: bash

jobs:
  tests:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - '3.12'

    steps:
      - name: Checkout out repo
        uses: actions/checkout@v4

      - name: Setting up python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Installing dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel build coverage
          python -m pip install -e .

      - name: Run tests for ${{ matrix.python-version }}
        run: |
          python -m coverage run -p -m unittest discover -v
          python -m coverage combine
          python -m coverage report -m --skip-covered
          python -m coverage json -o coverage.json

      - name: Uploading coverage data
        uses: actions/upload-artifact@v3
        with:
          name: coverage-data
          path: 'coverage.json'

  coverage:
    name: Coverage
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout out the repo
        uses: actions/checkout@v4

      - name: Setting up python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Downloading coverage data
        uses: actions/download-artifact@v3
        with:
          name: coverage-data

      - name: Combine
        run: |
          export TOTAL=$(python -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])")
          echo "total=$TOTAL" >> $GITHUB_ENV
          echo "### Total coverage: ${TOTAL}%" >> $GITHUB_STEP_SUMMARY

      - name: Making a badge
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_TOKEN }}
          gistID:
          filename: coverage.json
          label: Coverage
          message: ${{ env.total }}%
          minColorRange: 50
          maxColorRange: 90
          valColorRange: ${{ env.total }}